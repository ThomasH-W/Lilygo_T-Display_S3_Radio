/*
    File: src/main.cpp
*/
#include "Arduino.h"
#include "Audio.h"
#include "WiFi.h"
#include "psram_unique_ptr.hpp"

#ifdef CONFIG_IDF_TARGET_ESP32S3
#define I2S_DOUT      1
#define I2S_BCLK      2
#define I2S_LRC       3
#endif


String ssid =     "xxxxx";
String password = "xxxxx";

Audio audio;

void my_audio_info(Audio::msg_t m) {
    Serial.printf("%s: %s\n", m.s, m.msg);
}

void setup() {
    Serial.begin(MONITOR_SPEED);
    while (!Serial);// auf serielle Verbindung warten
    delay(1000);
    Serial.println("setup>> ....");
    
    Audio::audio_info_callback = my_audio_info;
    Serial.print("\n\n");
    Serial.println("setup>> ----------------------------------");
    Serial.printf("ESP32 Chip: %s\n", ESP.getChipModel());
    Serial.printf("Arduino Version: %d.%d.%d\n", ESP_ARDUINO_VERSION_MAJOR, ESP_ARDUINO_VERSION_MINOR, ESP_ARDUINO_VERSION_PATCH);
    Serial.printf("ESP-IDF Version: %d.%d.%d\n", ESP_IDF_VERSION_MAJOR, ESP_IDF_VERSION_MINOR, ESP_IDF_VERSION_PATCH);
    Serial.printf("ARDUINO_LOOP_STACK_SIZE %d words (32 bit)\n", CONFIG_ARDUINO_LOOP_STACK_SIZE);
    Serial.println("----------------------------------");
    Serial.print("\n\n");

    delay(1000);
    WiFi.begin(ssid.c_str(), password.c_str());
    while (WiFi.status() != WL_CONNECTED) delay(1500);
    Serial.println("setup>> WiFi connected");

    delay(1000);
    audio.setPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
    audio.setVolume(5); // default 0...21
    audio.connecttohost("http://wdr-1live-live.icecast.wdr.de/wdr/1live/live/mp3/128/stream.mp3"); // 
  //  audio->connecttohost("http://secure.live-streams.nl/flac.flac"); // flac
    // audio.connecttohost("http://stream.revma.ihrhls.com/zc4882/hls.m3u8");
    Serial.println("setup>> Audio connected");

}

void loop() {
    audio.loop();
    vTaskDelay(1);
}

